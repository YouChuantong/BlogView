{"remainingRequest":"/Users/upyou/Desktop/blog-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/upyou/Desktop/blog-view/src/childComponents/categoriesList.vue?vue&type=style&index=0&id=04d49b07&scoped=true&lang=scss&","dependencies":[{"path":"/Users/upyou/Desktop/blog-view/src/childComponents/categoriesList.vue","mtime":1586672485738},{"path":"/Users/upyou/Desktop/blog-view/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/upyou/Desktop/blog-view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/upyou/Desktop/blog-view/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/upyou/Desktop/blog-view/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/upyou/Desktop/blog-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/upyou/Desktop/blog-view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi4vc3R5bGUuc2NzcyI7CgouY2F0ZWdvcmllcyB7CiAgcGFkZGluZzogMCAxNXB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXgtaGVpZ2h0OiAxODBweDsKICBvdmVyZmxvdzogYXV0bzsKICB1c2VyLXNlbGVjdDogbm9uZTsKCiAgLkhpZ2hsaWdodCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBoZWlnaHQ6IDEwcHg7CiAgICB3aWR0aDogM3B4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHN3aXRjaC1iYWNrZ3JvdW5kLWNoZWNrZWQ7CiAgICByaWdodDogMDsKICAgIHRvcDogMTBweDsKICB9CgogIC5jYXRlZ29yaWVzTGlzdCB7CiAgICBsaW5lLWhlaWdodDogMzBweDsKCiAgICAuY2F0ZWdvcmllc0luZm8gewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7CiAgICB9CgogICAgLm5hbWUgewogICAgICBmb250LXNpemU6IDE0cHg7CiAgICB9CiAgICAuY291bnQgewogICAgICBmb250LXNpemU6IDEycHg7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["categoriesList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"categoriesList.vue","sourceRoot":"src/childComponents","sourcesContent":["<template>\n  <card boxShadow opacity>\n    <h3 class=\"title\">分类：</h3>\n    <div class=\"dline\"></div>\n    <div\n      class=\"categories\"\n      @mouseenter.stop=\"ChangeHighlightHoveStatic(true)\"\n      @mouseleave.stop=\"ChangeHighlightHoveStatic(false)\"\n    >\n      <i class=\"Highlight\" :style=\"{top: HighlightTop + 'px'}\"></i>\n      <i\n        class=\"Highlight HighlightHove\"\n        :style=\"{top: HighlightHoveTop + 'px', opacity: HighlightHoveStatic }\"\n      ></i>\n      <ul class=\"categoriesList\">\n        <li\n          class=\"categoriesInfo\"\n          @mouseenter.stop=\"HighlightHover\"\n          @click=\"toCategoriesPage\"\n          v-for=\"(item, i) in categoriesList\"\n          :key=\"i\"\n          :ref=\"`categoriesList${item.categoriesID}` \"\n        >\n          <div class=\"name\">{{item.name}}</div>\n          <div class=\"count\">{{item.count}}</div>\n        </li>\n      </ul>\n    </div>\n  </card>\n</template>\n<script lang=\"ts\">\n// @ is an alias to /src\nimport Vue from \"vue\";\nimport { Component, Prop, Emit, Watch, Model } from \"vue-property-decorator\";\n\nimport card from \"@/components/card-component.vue\";\nimport { gsap } from \"gsap\";\n\n@Component({\n  components: {\n    card\n  }\n})\nexport default class Ccategories extends Vue {\n  @Prop(Object) private search?: object;\n  @Prop(Object) private Hover?: object;\n\n  @Watch(\"search\", { deep: true })\n  searchObject(obj: any) {\n    for (const keys in obj) {\n      const val = (obj as any)[keys];\n      this.FindCategories(keys, val);\n      break;\n    }\n  }\n\n  @Watch(\"Hover\")\n  HoverList(obj: object) {\n    // this.HighlightHover((obj as any).e)\n    this.ChangeHighlightHoveStatic(true);\n    if (this.HoverTime) clearTimeout(this.HoverTime); // 移除上一个定时器\n    const top =\n      (this.$refs[`categoriesList${(obj as any).categoriesID}`] as any)[0]\n        .offsetTop + 10; // 计算高亮光标位置\n    gsap.to(this.$data, {\n      duration: 0.5,\n      HighlightHoveTop: top\n    });\n    // 设置消失时间\n    this.HoverTime = setTimeout(() => {\n      // 设置光标状态\n      this.ChangeHighlightHoveStatic(false);\n    }, 1000);\n  }\n\n  // 文章列表模拟数据\n  private categoriesList: object[] = [\n    { name: \"Java\", count: \"99+\", categoriesID: 1 },\n    { name: \"PHP\", count: \"99+\", categoriesID: 2 },\n    { name: \"Node\", count: \"99+\", categoriesID: 3 },\n    { name: \"C#\", count: \"99+\", categoriesID: 4 },\n    { name: \"C/C++\", count: \"99+\", categoriesID: 5 },\n    { name: \"Javascript\", count: \"99+\", categoriesID: 6 },\n    { name: \"HTML\", count: \"99+\", categoriesID: 7 },\n    { name: \"Css\", count: \"99+\", categoriesID: 8 },\n    { name: \"Java\", count: \"99+\", categoriesID: 9 }\n  ];\n\n  private HoverTime: number | undefined; // 可移动的高亮点防抖函数,防止消失\n  private HighlightHoveTop?: number = 10; // 可移动的高亮点\n  private HighlightTop?: number = 10; // 选中高亮点\n  private HighlightHoveStatic?: number = 0; // 鼠标是否移入\n\n  // 鼠标移入时随光标移动\n  private HighlightHover(e: MouseEvent) {\n    // 如果前一次设置了这个防抖，取消\n    if (this.HoverTime) clearTimeout(this.HoverTime);\n    gsap.to(this.$data, {\n      duration: 0.5,\n      HighlightHoveTop: (e.currentTarget as any).offsetTop + 10\n    });\n  }\n  // 当前选中位置\n  private toCategoriesPage(e: MouseEvent) {\n    gsap.to(this.$data, {\n      duration: 0.5,\n      HighlightTop: (e.currentTarget as any).offsetTop + 10\n    });\n  }\n  private ChangeHighlightHoveStatic(s: boolean) {\n    gsap.to(this.$data, {\n      duration: 0.5,\n      HighlightHoveStatic: s ? 1 : 0\n    });\n  }\n  private FindCategories(key: string, val: any) {\n    this.categoriesList.forEach((item, index) => {\n      if ((item as any)[key] === val) {\n        const top =\n          (this as any).$refs[`categoriesList${val}`][0].offsetTop + 10;\n        gsap.to(this.$data, {\n          duration: 0.5,\n          HighlightTop: top\n        });\n        return;\n      }\n    });\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../style.scss\";\n\n.categories {\n  padding: 0 15px;\n  position: relative;\n  max-height: 180px;\n  overflow: auto;\n  user-select: none;\n\n  .Highlight {\n    position: absolute;\n    height: 10px;\n    width: 3px;\n    background-color: $switch-background-checked;\n    right: 0;\n    top: 10px;\n  }\n\n  .categoriesList {\n    line-height: 30px;\n\n    .categoriesInfo {\n      display: flex;\n      justify-content: space-between;\n      border-radius: 4px;\n      cursor: pointer;\n      list-style-type: disc;\n    }\n\n    .name {\n      font-size: 14px;\n    }\n    .count {\n      font-size: 12px;\n    }\n  }\n}\n</style>"]}]}